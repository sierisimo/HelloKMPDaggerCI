buildscript {
    repositories {
        mavenLocal()
        google()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.21"
    }
}

apply plugin: 'kotlin-multiplatform'

kotlin {
    targets {
        js('frontend') {
            browser {
                testTask {
                    // TODO: disable browser tests since we can't run it on teamcity agents yet
                    enabled = false
                }
            }
        }
        jvm('backend') {
        }
    }

    sourceSets {
        commonTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test-annotations-common"
                implementation "org.jetbrains.kotlin:kotlin-test-common"
            }
        }
        backendMain {
            dependencies {
                implementation "io.ktor:ktor-server-netty:2.0.2"
                implementation "io.ktor:ktor-server-html-builder:2.0.2"
                implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
                implementation "ch.qos.logback:logback-classic:1.2.11"
            }
        }
        backendTest {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-test"
                implementation "org.jetbrains.kotlin:kotlin-test-junit"
            }
        }
        frontendMain {
            dependencies {
                implementation "org.jetbrains.kotlin:kotlin-stdlib-js"
                implementation "org.jetbrains.kotlin:kotlin-test-js"
                implementation "io.ktor:ktor-client-core:2.0.2"
                implementation "io.ktor:ktor-client-js:2.0.2"
            }
        }
    }
}

repositories {
    mavenCentral()
}

tasks.getByName('frontendBrowserProductionWebpack') {
    outputFileName = 'output.js'
}

tasks.getByName('backendJar') {
    dependsOn(tasks.getByName('frontendBrowserProductionWebpack'))
    def frontendBrowserProductionWebpack = tasks.getByName('frontendBrowserProductionWebpack')
    from(new File(frontendBrowserProductionWebpack.destinationDirectory, frontendBrowserProductionWebpack.outputFileName))
}

task run(type: JavaExec, dependsOn: [backendJar]) {
    main = "io.ktor.samples.fullstack.backend.BackendCodeKt"
    classpath(configurations.backendRuntimeClasspath, backendJar)
    args = []
}
